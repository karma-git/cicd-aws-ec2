---

name: CICD ec2

on:
  push:
    branches:
      - master
    paths:
      - 'app/**'
  create:
    tags:
      - '**'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      # clone repo into runtime
      - name: Checkout
        uses: actions/checkout@v2
      # login into dockerhub
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: karmawow
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      # build image and push to dockerhub
      - name: Build Docker Image
        uses: docker/build-push-action@v2
        env:
          CI_COMMIT_SHORT_SHA: ${{ github.sha }}
          CI_PIPELINE_ID: ${{ github.run_id }}
          CI_COMMIT_TAG: ${{ github.ref_name }}
        with:
          context: ./app
          file: ./app/Dockerfile
          build-args: |
            CI_COMMIT_SHORT_SHA=${{ github.sha }}
            CI_PIPELINE_ID=${{ github.run_id }}
            CI_COMMIT_TAG=${{ github.ref_name }}
          push: true
          tags: |
            karmawow/cicd_ec2:${{ github.run_id }}
            karmawow/cicd_ec2:${{ github.ref_name }}
            karmawow/cicd_ec2:latest
      # ssh to machine, modify compose and restart it
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: GITHUB_RUN_ID
          script: |
            cd /home/ubuntu/cicd_ec2/app
            # debug
            echo $GITHUB_RUN_ID && pwd && ls && yq e '.services.api.image' docker-compose.yml
            # update image
            yq e -i '.services.api.image = "karmawow/cicd_ec2:" + strenv(GITHUB_RUN_ID)' docker-compose.yml
            # after
            yq e '.services.api.image' docker-compose.yml
            # restart docker
            docker-compose restart
